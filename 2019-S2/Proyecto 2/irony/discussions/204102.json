[
  {
    "Id": "415180",
    "ThreadId": "204102",
    "Html": "<p>Hi, I'm using Irony to write a parser for our custom languange, that is very similar to vb.</p>\r\n<p>Before begin to wriyte the entire grammar, i write little fragment of it with Irony,</p>\r\n<p>I thus write this:</p>\r\n<p><span style=\"font-size:x-small\">&lt;font size=&quot;2&quot;&gt;\r\n<p>&nbsp;</p>\r\n&lt;/font&gt;</span>\r\n<p><span style=\"font-size:x-small;color:#0000ff\"><span style=\"font-size:x-small;color:#0000ff\">var</span></span><span style=\"font-size:x-small\"> variableName = </span><span style=\"font-size:x-small;color:#0000ff\"><span style=\"font-size:x-small;color:#0000ff\">new</span></span><span style=\"font-size:x-small\"> </span><span style=\"font-size:x-small;color:#2b91af\"><span style=\"font-size:x-small;color:#2b91af\">IdentifierTerminal</span></span><span style=\"font-size:x-small\">(</span><span style=\"font-size:x-small;color:#a31515\"><span style=\"font-size:x-small;color:#a31515\">&quot;variableName&quot;</span></span><span style=\"font-size:x-small\">);</span></p>\r\n<p>&nbsp;<span style=\"font-size:x-small;color:#0000ff\"><span style=\"font-size:x-small;color:#0000ff\">var</span></span><span style=\"font-size:x-small\"> intNumber = </span><span style=\"font-size:x-small;color:#0000ff\"><span style=\"font-size:x-small;color:#0000ff\">new</span></span><span style=\"font-size:x-small\"> </span><span style=\"font-size:x-small;color:#2b91af\"><span style=\"font-size:x-small;color:#2b91af\">NumberLiteral</span></span><span style=\"font-size:x-small\">(</span><span style=\"font-size:x-small;color:#a31515\"><span style=\"font-size:x-small;color:#a31515\">&quot;intNumber&quot;</span></span><span style=\"font-size:x-small\">, </span><span style=\"font-size:x-small;color:#2b91af\"><span style=\"font-size:x-small;color:#2b91af\">NumberOptions</span></span><span style=\"font-size:x-small\">.IntOnly);</span></p>\r\n<p>&nbsp;<span style=\"font-size:x-small;color:#0000ff\"><span style=\"font-size:x-small;color:#0000ff\">var</span></span><span style=\"font-size:x-small\"> lValue = </span><span style=\"font-size:x-small;color:#0000ff\"><span style=\"font-size:x-small;color:#0000ff\">new</span></span><span style=\"font-size:x-small\"> </span><span style=\"font-size:x-small;color:#2b91af\"><span style=\"font-size:x-small;color:#2b91af\">NonTerminal</span></span><span style=\"font-size:x-small\">(</span><span style=\"font-size:x-small;color:#a31515\"><span style=\"font-size:x-small;color:#a31515\">&quot;lValue&quot;</span></span><span style=\"font-size:x-small\">);</span></p>\r\n<p>&nbsp;<span style=\"font-size:x-small;color:#0000ff\"><span style=\"font-size:x-small;color:#0000ff\">var</span></span><span style=\"font-size:x-small\"> lValueSizeDef = </span><span style=\"font-size:x-small;color:#0000ff\"><span style=\"font-size:x-small;color:#0000ff\">new</span></span><span style=\"font-size:x-small\"> </span><span style=\"font-size:x-small;color:#2b91af\"><span style=\"font-size:x-small;color:#2b91af\">NonTerminal</span></span><span style=\"font-size:x-small\">(</span><span style=\"font-size:x-small;color:#a31515\"><span style=\"font-size:x-small;color:#a31515\">&quot;lValueSizeDef&quot;</span></span><span style=\"font-size:x-small\">);</span></p>\r\n<p>&nbsp; <span style=\"font-size:x-small;color:#0000ff\"><span style=\"font-size:x-small;color:#0000ff\">this</span></span><span style=\"font-size:x-small\">.Root = lValue</span></p>\r\n<p>&nbsp; <span style=\"font-size:x-small\">lValue.Rule = variableName + lValueSizeDef;\r\n<p>&nbsp; lValueSizeDef.Rule = intNumber | Empty;</p>\r\n<p>This grammar allows to write 1 variable name followed by an optional int number.</p>\r\n<p>When I try this grammar with grammar explorer, in the tab &quot;parser state&quot; i get the following state table:</p>\r\n<p>State S0<br>&nbsp; Shift items:<br>&nbsp;&nbsp;&nbsp; lValue' -&gt; &middot;lValue EOF <br>&nbsp;&nbsp;&nbsp; lValue -&gt; &middot;variableName lValueSizeDef <br>&nbsp; Transitions: lValue-&gt;S1, variableName-&gt;S2,</p>\r\n<p>State S1<br>&nbsp; Shift items:<br>&nbsp;&nbsp;&nbsp; lValue' -&gt; lValue &middot;EOF <br>&nbsp; Transitions:</p>\r\n<p><strong>State S2 (Inadequate)</strong><br>&nbsp; Shift items:<br>&nbsp;&nbsp;&nbsp; lValue -&gt; variableName &middot;lValueSizeDef <br>&nbsp;&nbsp;&nbsp; lValueSizeDef -&gt; &middot;[ intNumber ] <br>&nbsp;&nbsp;&nbsp; lValueSizeDef -&gt; &middot;[ intNumber , intNumber ] <br>&nbsp; Reduce items:<br>&nbsp;&nbsp;&nbsp; lValueSizeDef -&gt; &middot; [EOF]<br>&nbsp; Transitions: lValueSizeDef-&gt;S4, [-&gt;S5,</p>\r\n<p>State S3<br>&nbsp; Reduce items:<br>&nbsp;&nbsp;&nbsp; lValue' -&gt; lValue EOF &middot;<br>&nbsp; Transitions:</p>\r\n<p>State S2 reports &quot;Inadeguate&quot;, because, if i understand, that the parser don't know if reduce or to shift.</p>\r\n<p>So the way I write the grammar is wrong. What is the right way?</p>\r\n<p>&nbsp;</p>\r\n<p>TIA</p>\r\n<p>BTW:</p>\r\n<p>Our language admint to declare variable implicity, but for string need to know the size:</p>\r\n<p>G$[50]=&quot;this is a string&quot;</p>\r\n<p>this is needed only once, after the first occurrence, the variable can appear without size:</p>\r\n<p>G$=&quot; another string&quot;</p>\r\n<p>In the grammar I wrote before, I eliminate the sbaces to simplify.</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n&lt;font size=&quot;2&quot;&gt;\r\n<p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n</p>\r\n&lt;/font&gt;</span></p>\r\n</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2010-03-07T09:44:34.35-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "415184",
    "ThreadId": "204102",
    "Html": "<p>&quot;Inadequate&quot; is a commonly-used term in compiler construction field meaning that the state has both shift and reduce items. It does not mean that parser wouldn't know what to do - it will use lookaheads (next symbol) to make the decision. Only if it cannot decide based on lookahead it reports the case as a &quot;conflict&quot; (error) on Grammar Errors page. So pay attention only to these error message, you are ok so far.&nbsp;</p>",
    "PostedDate": "2010-03-07T10:06:59.287-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]