[
  {
    "Id": "699614",
    "ThreadId": "279833",
    "Html": "<p>Hi, I have a question regarding my project where i'm using Irony.</p>\n<p>What i currently have is the following<span style=\"font-family: Consolas; font-size: x-small;\"><span style=\"font-family: Consolas; font-size: x-small;\"><span style=\"font-family: Consolas; font-size: x-small;\">&nbsp;</span></span></span></p>\n<p><span style=\"font-family: Consolas; color: #2b91af; font-size: x-small;\"><span style=\"font-family: Consolas; color: #2b91af; font-size: x-small;\"><span style=\"font-family: Consolas; color: #2b91af; font-size: x-small;\">NonTerminal</span></span></span><span style=\"font-family: Consolas; font-size: x-small;\"><span style=\"font-family: Consolas; font-size: x-small;\"> addblockcmd = </span></span><span style=\"font-family: Consolas; color: #0000ff; font-size: x-small;\"><span style=\"font-family: Consolas; color: #0000ff; font-size: x-small;\"><span style=\"font-family: Consolas; color: #0000ff; font-size: x-small;\">new</span></span></span><span style=\"font-family: Consolas; font-size: x-small;\"><span style=\"font-family: Consolas; font-size: x-small;\"> </span></span><span style=\"font-family: Consolas; color: #2b91af; font-size: x-small;\"><span style=\"font-family: Consolas; color: #2b91af; font-size: x-small;\"><span style=\"font-family: Consolas; color: #2b91af; font-size: x-small;\">NonTerminal</span></span></span><span style=\"font-family: Consolas; font-size: x-small;\"><span style=\"font-family: Consolas; font-size: x-small;\">(</span></span><span style=\"font-family: Consolas; color: #a31515; font-size: x-small;\"><span style=\"font-family: Consolas; color: #a31515; font-size: x-small;\"><span style=\"font-family: Consolas; color: #a31515; font-size: x-small;\">\"addblock\"</span></span></span><span style=\"font-family: Consolas; font-size: x-small;\"><span style=\"font-family: Consolas; font-size: x-small;\">);</span></span></p>\n<p><span style=\"font-family: Consolas; font-size: x-small;\"><span style=\"font-family: Consolas; font-size: x-small;\"><span style=\"font-family: Consolas; font-size: x-small;\"><span style=\"font-family: Consolas; font-size: x-small;\"><span style=\"font-family: Consolas; font-size: x-small;\"><span style=\"font-family: Consolas; font-size: x-small;\"><span style=\"font-family: Consolas; font-size: x-small;\"><span style=\"font-family: Consolas; font-size: x-small;\"><span style=\"font-family: Consolas; font-size: x-small;\"><span style=\"font-family: Consolas; font-size: x-small;\"><span style=\"font-family: Consolas; font-size: x-small;\"><span style=\"font-family: Consolas; font-size: x-small;\">&nbsp;</span></span></span></span></span></span></span></span></span></span></span></span>\n<p><span style=\"font-family: Consolas; font-size: x-small;\"><span style=\"font-family: Consolas; font-size: x-small;\"><span style=\"font-family: Consolas; font-size: x-small;\"><span style=\"font-family: Consolas; font-size: x-small;\"><span style=\"font-family: Consolas; font-size: x-small;\">&nbsp;</span></span></span></span></span></p>\n<p>addblockcmd.Rule = ToTerm(<span style=\"font-family: Consolas; color: #a31515; font-size: x-small;\"><span style=\"font-family: Consolas; color: #a31515; font-size: x-small;\"><span style=\"font-family: Consolas; color: #a31515; font-size: x-small;\">\"addblock\"</span></span></span><span style=\"font-family: Consolas; font-size: x-small;\"><span style=\"font-family: Consolas; font-size: x-small;\">) + nameoptions + getpos + getrot + getsize + getdsize + getcog + getdmass + getmass + </span></span><span style=\"font-family: Consolas; color: #a31515; font-size: x-small;\"><span style=\"font-family: Consolas; color: #a31515; font-size: x-small;\"><span style=\"font-family: Consolas; color: #a31515; font-size: x-small;\">\";\"</span></span></span></p>\n<p><span style=\"font-family: Consolas;\">I was wondering whether there is a way (besides writing a rule for every single option) to be able to accept input&nbsp; so that the order after nameoptions, is independant but also can only occur once.</span></p>\n<p><span style=\"font-family: Consolas;\">so to make it more clear:</span></p>\n<p>INPUT:</p>\n<p>addblock block1 pos 1 rot 2 size 3, dsize 4 cog 5 dmass 6 mass 7;&nbsp; (this is acceptabel according to rule)</p>\n<p>&nbsp;</p>\n<p>addblock block1&nbsp; rot 2 pos 1&nbsp;size 3, dsize 4 cog 5 dmass 6 mass 7; (this is NOT&nbsp;acceptabel according to rule, because pos should be before rot)</p>\n<p>﻿However, if i change the rule so that all to options (getpos, getrot, getsize, getdsize ......) is in a makestarrule it would create the problem of people being able to put getpos twice or even more times for one instance of addblock.</p>\n<p>﻿</p>\n<p>﻿is there a way to define the rule so that all the options after nameoptions can be given without a specific order, but also can be entered only once for every command (like getpos)????????</p>\n<p>﻿</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p><span style=\"font-family: Consolas; font-size: x-small;\"><span style=\"font-family: Consolas; font-size: x-small;\"><span style=\"font-family: Consolas; font-size: x-small;\">&nbsp;</span></span></span></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n</p>\n<p><span style=\"font-family: Consolas; font-size: x-small;\"><span style=\"font-family: Consolas; font-size: x-small;\">;</span></span></p>",
    "PostedDate": "2011-11-17T07:34:11.38-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "699647",
    "ThreadId": "279833",
    "Html": "<p>Just a thought, but do you need to do the check for \"only once\" at parse time?&nbsp; Or can that be done post-parsing?&nbsp; My gut feel is that you would make life a lot easier if you can do the checking later.&nbsp; As you say, I think that even if you could express this in a simple way, I dont think the parser would have an easy time with it.</p>\r\n<p>The other thing with a star rule is that it would also accept zero input (ie missing terms).&nbsp; Would that also be an issue?</p>",
    "PostedDate": "2011-11-17T08:24:22.13-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "699714",
    "ThreadId": "279833",
    "Html": "<p>Agree with wmh, this is something that should be checked in post-parse analysis. Syntactic rules are not fit to express no-repeat rules, this is semantics, and better implemented by post-parse methods. Just define the statement as a list of options using MakeStar/PlusRule method, and then use iterator/visitor after parsing is complete.</p>\r\n<p>Roman</p>",
    "PostedDate": "2011-11-17T10:02:16.76-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "700018",
    "ThreadId": "279833",
    "Html": "<p>Thanks for the info guys, that's what i thought, but i just needed to make sure :). Thanks for creating and supporting this package guys, it's awesome. I tried to user ANTLR before finding Irony, and irony is alot better (especially when working with .NET Framework).</p>",
    "PostedDate": "2011-11-17T23:53:20.433-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]