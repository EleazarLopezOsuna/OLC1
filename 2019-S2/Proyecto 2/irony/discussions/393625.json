[
  {
    "Id": "905910",
    "ThreadId": "393625",
    "Html": "\r\n<p>Hi all,</p>\r\n<p>I wanna know if is possible to allow the following:</p>\r\n<p>1- In the grammar the word &quot;delete&quot; is considered as a keyword.</p>\r\n<p>2- In some cases i need to allow that an object's method is named using that keyword, for example:</p>\r\n<pre><span><span>obj.</span><span>delete</span><span> = function(){screenManager.alert('hello');};</span></span></pre>\r\n<p>But in this case, the grammar throws a parsing error because after the &quot;.&quot; its expecting an Identifier as defined in the rules and not a Keyword.</p>\r\n<p>Thanks,</p>\r\n",
    "PostedDate": "2012-08-29T12:58:44.953-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "906397",
    "ThreadId": "393625",
    "Html": "<p>Hi aquintana,</p>\r\n<p>could you please post your grammar?<br />I tried to reproduce your case, but my sample grammar works well:</p>\r\n<p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre><span style=\"color: green;\">// csc.exe test.cs /r:Irony.dll </span>\r\n\r\n<span style=\"color: blue;\">using</span> System;\r\n<span style=\"color: blue;\">using</span> Irony;\r\n<span style=\"color: blue;\">using</span> Irony.Parsing;\r\n\r\n<span style=\"color: blue;\">class</span> Program\r\n{\r\n\t<span style=\"color: green;\">// sample code to parse</span>\r\n\t<span style=\"color: blue;\">const</span> <span style=\"color: blue;\">string</span> snippet = <span style=\"color: #a31515;\">\"program.main; obj.delete; delete obj;\"</span>;\r\n\r\n\t<span style=\"color: blue;\">static</span> <span style=\"color: blue;\">void</span> Main()\r\n\t{\r\n\t\t<span style=\"color: blue;\">var</span> parser = <span style=\"color: blue;\">new</span> Parser(<span style=\"color: blue;\">new</span> SampleGrammar());\r\n\t\t<span style=\"color: blue;\">var</span> tree = parser.Parse(snippet);\r\n\r\n\t\tConsole.WriteLine(<span style=\"color: #a31515;\">\"Parsing: {0}\"</span>, snippet);\r\n\t\t<span style=\"color: blue;\">if</span> (tree.ParserMessages.Count == 0)\r\n\t\t{\r\n\t\t\tConsole.WriteLine(<span style=\"color: #a31515;\">\"No errors.\"</span>);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n<span style=\"color: blue;\">class</span> SampleGrammar : Grammar\r\n{\r\n\t<span style=\"color: blue;\">public</span> SampleGrammar() : <span style=\"color: blue;\">base</span>(<span style=\"color: blue;\">true</span>)\r\n\t{\r\n\t\t<span style=\"color: green;\">// terminals</span>\r\n\t\t<span style=\"color: blue;\">var</span> Identifier = <span style=\"color: blue;\">new</span> IdentifierTerminal(<span style=\"color: #a31515;\">\"Identifier\"</span>, <span style=\"color: #a31515;\">\"_-\"</span>, <span style=\"color: #a31515;\">\"\"</span>);\r\n\r\n\t\t<span style=\"color: green;\">// non-terminals</span>\r\n\t\t<span style=\"color: blue;\">var</span> Program = <span style=\"color: blue;\">new</span> NonTerminal(<span style=\"color: #a31515;\">\"Program\"</span>);\r\n\t\t<span style=\"color: blue;\">var</span> Statement = <span style=\"color: blue;\">new</span> NonTerminal(<span style=\"color: #a31515;\">\"Statement\"</span>);\r\n\t\t<span style=\"color: blue;\">var</span> Expression = <span style=\"color: blue;\">new</span> NonTerminal(<span style=\"color: #a31515;\">\"Expression\"</span>);\r\n\t\t<span style=\"color: blue;\">var</span> DeleteStatement = <span style=\"color: blue;\">new</span> NonTerminal(<span style=\"color: #a31515;\">\"DeleteStatement\"</span>);\r\n\r\n\t\t<span style=\"color: green;\">// rules</span>\r\n\t\tProgram.Rule = MakePlusRule(Program, Statement);\r\n\t\tStatement.Rule = DeleteStatement | Expression;\r\n\t\tExpression.Rule = Identifier + <span style=\"color: #a31515;\">\".\"</span> + Identifier + <span style=\"color: #a31515;\">\";\"</span>;\r\n\t\tDeleteStatement.Rule = ToTerm(<span style=\"color: #a31515;\">\"delete\"</span>) + Identifier + <span style=\"color: #a31515;\">\";\"</span>;\r\n\t\tRoot = Program;\r\n\t}\r\n}\r\n</pre>\r\n</div>\r\n</p>",
    "PostedDate": "2012-08-30T09:21:34.373-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]