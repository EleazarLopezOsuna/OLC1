[
  {
    "Id": "854673",
    "ThreadId": "361195",
    "Html": "\r\n<p>Hi, I have using this and make some changes in rules. Most of them make parse state error, but it is works. The problem is the ambigious parsing in statement when it come to local_variable_type and member_access.</p>\r\n<p>In this version it using member_access as local variable type, but it is error when meet array type. So I replace member_access with type_ref and works fine.</p>\r\n<p>Example we have class :</p>\r\n<p></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">public</span> <span style=\"color:blue\">class</span> A\r\n{\r\n      <span style=\"color:blue\">public</span> A _f1;\r\n      <span style=\"color:blue\">public</span> A M1() {}\r\n}\r\n</pre>\r\n</div>\r\n<p></p>\r\n<p>Let's look at some member access expressions :</p>\r\n<p>_f1.M1()._f1._f1....... works fine :)</p>\r\n<p>but it got error because it jumps to local variable type state when 2nd expression is identifier</p>\r\n<p>_f1._f1.M1();&nbsp;&nbsp; ......you got error in ( which expect identifier, which mean this parser jump into type_ref state and no type using () right.</p>\r\n<p>My question how to jump to other state which is it should be member_access ?</p>\r\n",
    "PostedDate": "2012-06-27T17:52:55.293-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "855106",
    "ThreadId": "361195",
    "Html": "<p>Hi</p>\r\n<p>it is really hard to understand what's going on from your explanations, but I will try my best guesses.</p>\r\n<p><em><span style=\"white-space: pre;\"> </span>.. Most of them make parse state error, but it is works...</em></p>\r\n<p>I guess you see Grammar errors (conflicts) in Grammar Explorer, but you think it's OK. It is NOT ok. You should not start parsing until you fixed/resolved all grammar conflicts. All your troubles are because of this.&nbsp;</p>\r\n<p><em><span style=\"white-space: pre;\"> </span>... jump to other state...</em></p>\r\n<p>There is no such thing as jumping to other state. Parser is a state machine built from your grammar. Fix the grammar.&nbsp;</p>\r\n<p>My guess your conflicts may come from one of two missteps:</p>\r\n<p>1. You defined two identifier terminals - one for types, one variables/methods/fields. They are identical for parsing engine and it has very little info to decide which is that when it sees a sequence of characters.&nbsp;</p>\r\n<p>2. You have one terminal for types and variables, but you have non-terminals for Type and MemberName that \"wrap\" this terminal. The trouble for parser is that it has to decide which one of these is an identifier that it had just received, and your grammar is ambiguous - it forces parser to choose too early, before it had seen the rest of the expression. So get rid of these non-terminals (Type and MemberName and whatever else you have), and encode expressions for declarations using identifier terminal directly.&nbsp;</p>\r\n<p>Fix all conflicts before you start parsing samples. Look at other sample grammars, like c#, for clues.</p>\r\n<p>Roman</p>\r\n<p>&nbsp;</p>\r\n<p><span>&nbsp;</span></p>",
    "PostedDate": "2012-06-28T10:17:34.21-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "855234",
    "ThreadId": "361195",
    "Html": "\r\n<p>Well, I m not really understand with your codes and your explanation. I know the grammer parser state must no erros, because the code make decision from that state right ? But what I need parser that can parse C# code into symbols and luckily it's work,\r\n means no parse output error.</p>\r\n<p>There are some problems in latest version which it should be simple C# statement that throw error in parsing.</p>\r\n<p>Example :</p>\r\n<ul>\r\n<li>member_access.Rule = identifier_ext &#43; member_access_segments_opt; </li></ul>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; that rule only works on simple member access and throw error on statement like this</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ((ClassA)id).method();&nbsp;&nbsp; -&gt; parentheized member access,</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; typeof(ClassA).ToString() --&gt; typeof access , so I change your rule into something like this :</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre> member_access.Rule = <span style=\"color:#a31515\">&quot;this&quot;</span> &#43; member_access_segments_opt | <span style=\"color:#a31515\">&quot;base&quot;</span> &#43; member_access_segments_opt |\n                typeof_expression &#43; member_access_segments_opt |\n                <span style=\"color:green\">//    qual_name_with_targs &#43; member_access_segments_opt |</span>\n                identifier_or_builtin &#43; member_access_segments_opt |\n                parenthesized_expression &#43; member_access_segments_opt;<br></pre>\r\n<ul>\r\n<li>local_variable_type.Rule = member_access | &quot;var&quot;; </li></ul>\r\n</div>\r\n<div style=\"color:black; background-color:white\">&nbsp; &nbsp; &nbsp; &nbsp;&nbsp; when this meet array type declaration like String[] , it is throw error and I force to change like below</div>\r\n<div style=\"color:black; background-color:white\">\r\n<div style=\"color:black; background-color:white\">\r\n<pre>    local_variable_type.Rule = type_ref | <span style=\"color:#a31515\">&quot;var&quot;</span>;<br>&nbsp;</pre>\r\n</div>\r\n<ul>\r\n<li>type_ref.Rule = type_or_void &#43; qmark_opt &#43; rank_specifiers_opt &#43; typearg_or_gendimspec_list;\r\n</li></ul>\r\n</div>\r\n<div style=\"color:black; background-color:white\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; I change since only metho return type has void :&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; type_ref.Rule = qual_name_with_targs &#43; qmark_opt &#43; rank_specifiers_opt\r\n &#43; typearg_or_gendimspec_list;</div>\r\n<div style=\"color:black; background-color:white\">\r\n<ul>\r\n<li>typecast_expression.Rule = parenthesized_expression &#43; primary_expression; </li></ul>\r\n</div>\r\n<div style=\"color:black; background-color:white\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; changed into :</div>\r\n<div style=\"color:black; background-color:white\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; typecast_expression.Rule = typecast_target &#43; primary_expression;</div>\r\n<div style=\"color:black; background-color:white\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; typecast_target.Rule = Lpar &#43; type_ref &#43; Rpar;</div>\r\n<div style=\"color:black; background-color:white\">\r\n<ul>\r\n<li>method_declaration.Rule = member_header &#43; type_ref &#43; qual_name_with_targs&nbsp; // &#43; type_parameter_list.Q()\r\n<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#43; formal_parameter_list_par &#43; type_parameter_constraints_clauses_opt &#43; method_body;\r\n</li></ul>\r\n</div>\r\n<div style=\"color:black; background-color:white\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; changed into :<br>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>    method_declaration.Rule = member_header &#43; <span style=\"color:#a31515\">&quot;void&quot;</span> &#43; qual_name_with_targs\n              &#43; formal_parameter_list_par &#43; type_parameter_constraints_clauses_opt &#43; method_body |\n                member_header &#43; type_ref &#43; qual_name_with_targs\n              &#43; formal_parameter_list_par &#43; type_parameter_constraints_clauses_opt &#43; method_body;<br></pre>\r\n<ol>\r\n</ol>\r\n<div style=\"color:black; background-color:white\">From all those it will give some confilct in parse state, but it can parsing all my codes and I got symbols :)<br>\r\n<br>\r\nBUT, ....<br>\r\n<br>\r\nIt has one problem, that it can not parse this statement : ( think member_access as local_variable_declaration )\r\n<br>\r\n<br>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>property1.property2.method1(); <span style=\"color:green\">// --&gt; error on (, I check the parser think it is as local_variable_declaration, <br>    // because the second property2 meet criteria of </span><span style=\"color:green\">qual_name_segment</span><span style=\"color:green\"> ,<br>    // in type_ref -&gt;  qual_name_with_targs -&gt; qual_name_segment,</span>\n</pre>\r\n</div>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n<br>\r\nbut, it is works on something like :<br>\r\n<br>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>property1.method1().property2; <span style=\"color:green\">// --&gt; the method1() is parsing into member_access_segment -&gt; <br>   // argument_list_par , since it found ().</span>\n</pre>\r\n</div>\r\n<br>\r\nso, my conclusion is :</div>\r\n<ol>\r\n<li>The parser only look from first to next, and match the first rule, and just throw error when the next not match the next rule.\r\n</li><li>The parser should using cache for one complete statement from start to end, so when there are error found in the middle, it should retry parse from beginning of statement using other option rule available.\r\n</li></ol>\r\n<p>Ok that is all I can explain..., I hope find a solution for his :)</p>\r\n</div>\r\n</div>\r\n",
    "PostedDate": "2012-06-28T18:20:38.6-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "856425",
    "ThreadId": "361195",
    "Html": "<p>Well, I'm afraid I can't help you here. As far as I understood, finally, you're playing with c# sample grammar, and expect it to parse all kinds of c# expressions. It does not work - c# grammar is just a limited sample, it is far from complete c# parser. To finish it would require a lot of tweaking, custom actions (token preview) and other stuff. And definitely advanced level of expertise in LALR parsing algorithms. Do not take this sample too seriously.&nbsp;</p>",
    "PostedDate": "2012-07-02T09:39:24.477-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]