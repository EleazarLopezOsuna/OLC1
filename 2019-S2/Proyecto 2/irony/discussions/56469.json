[
  {
    "Id": "190830",
    "ThreadId": "56469",
    "Html": "<p>First of all, thank you for the software. I installed it and it works.</p>\r\n<p>However the complete lack of documentation is not good.</p>\r\n<p>Currently I do not understand how to handle compilation errors. The method described in the CodeProject article</p>\r\n<p>does not work (is it for the previous version ?)</p>\r\n<p>The next thing that looked strange is that the compiler succesfully handled the expression (I made a simple LISP-like test grammar)</p>\r\n<p>( a ( b c d )))&nbsp; - is it normal and how can I handle such cases ?</p>\r\n<p>Also it is unclear to me how to control the process of parsing. For example, I'd like to stop parse process when it</p>\r\n<p>finds undeclared identifier. So I think there should be a way to intercept the rule and do some checks. How ?</p>\r\n<p>The last thing that remains unclear: should MakePlusRule ALWAYS looks like</p>\r\n<p>someNT.rule = MakePlusRule(someNT ...</p>\r\n<p>?</p>",
    "PostedDate": "2009-05-15T10:59:17.91-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "190876",
    "ThreadId": "56469",
    "Html": "<p>Hi</p>\r\n<p>Answering your questions</p>\r\n<p><em>However the complete lack of documentation is not good.</em></p>\r\n<p style=\"padding-left:30px\">Agreed, it sucks</p>\r\n<p><em>Currently I do not understand how to handle compilation errors. The method described in the CodeProject article</em></p>\r\n<p><em>does not work (is it for the previous version ?)</em></p>\r\n<p style=\"padding-left:30px\">Handle compilation errors? what do you mean? we just show them to user. CodeProject article is quite outdated, sorry</p>\r\n<p><em>The next thing that looked strange is that the compiler succesfully handled the expression (I made a simple LISP-like test grammar)</em></p>\r\n<p><em>( a ( b c d )))&nbsp; - is it normal and how can I handle such cases ?</em></p>\r\n<p style=\"padding-left:30px\">Just checked the expression with Scheme sample grammar - parser did correctly&nbsp;report the error - unmatched ending closing &quot;)&quot; (checked in latest source code, not alpha zip from download page).</p>\r\n<p style=\"padding-left:30px\">What &quot;unsuccessful&quot; behavior you expect? maybe something is wrong with your grammar?</p>\r\n<p><em>Also it is unclear to me how to control the process of parsing. For example, I'd like to stop parse process when it</em></p>\r\n<p><em>finds undeclared identifier. So I think there should be a way to intercept the rule and do some checks. How ?</em></p>\r\n<p style=\"padding-left:30px\">I don't think you can identify undeclared identifier during parsing. You should first parse, and then work with the parse tree and analyze code, and detect undeclared stuff. Even with strongly typed languages like c# i don't think it's possible to detect undeclared during parsing - the identifier might be in the outer scope. It is not syntax, it is semantic error.&nbsp;In general, the&nbsp;best practice is to continue parsing as long as you can (recovering the parser when you find syntax error), and then report errors, all that parser finds.</p>\r\n<p><em>The last thing that remains unclear: should MakePlusRule ALWAYS looks like</em></p>\r\n<p><em>someNT.rule = MakePlusRule(someNT ...</em></p>\r\n<p><em>?</em></p>\r\n<p style=\"padding-left:30px\">Don't understand... why not.. ah, in current implementation you can skip assignment part and simply call MakePlusRule as&nbsp;a proc:</p>\r\n<p style=\"padding-left:30px\">MakePlusRule(someNt, delim, elem);</p>\r\n<p style=\"padding-left:30px\">&nbsp;Inside the method the someNt.Rule property is already assigned. I recommend to use this the extended version with assignment to make it look just like other BNF rules in grammar, which assign Rule properties</p>\r\n<p style=\"padding-left:30px\">&nbsp;</p>",
    "PostedDate": "2009-05-15T14:30:17.857-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]