[
  {
    "Id": "1247574",
    "ThreadId": "546013",
    "Html": "I try to use Irony.Net with this syntax:\r<br />\n<strong><strong>!!test\r<br />\n!test1</strong></strong>\r<br />\nthere !!test - global variable\r<br />\nand !test1 - local variable\r<br />\n<br />\ni wrote this code:\r<br />\n<strong>var local_identifier = new IdentifierTerminal(&quot;localidentifier&quot;,&quot;&quot;,&quot;!&quot;);</strong>\r<br />\nvar global_identifier = new IdentifierTerminal(&quot;globalidentifier&quot;,&quot;&quot;,&quot;!!&quot;);\r<br />\nvar param_identifier = new NonTerminal(&quot;paramidentifier&quot;);\r<br />\nparam_identifier.Rule = local_identifier | global_identifier;\r<br />\n<br />\nand i get shift-reduce error\r<br />\n<br />\nWhat i am doing wrong?<br />\n",
    "PostedDate": "2014-05-20T12:39:47.06-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1247584",
    "ThreadId": "546013",
    "Html": "your global identifier is no different from local - the double ! is the same as single - these are 'allowed' characters, so if you allow !, you allow many of them. You should probably use special 'prefix' feature in identifier (look at using '@' character in c# identifier, in c# grammar sample)<br />\nAs for shift-reduce conflict, it seems to me it is coming from different place, usually these 'inconsistencies' in internal term definitions are not manifested in grammar conflicts - they show up only in actual parsing, when scanner selects wrong terminal for an input string<br />\n",
    "PostedDate": "2014-05-20T13:08:56.453-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": "2014-05-20T13:30:51.807-07:00"
  },
  {
    "Id": "1247592",
    "ThreadId": "546013",
    "Html": "Thank you!\r<br />\n<br />\nI am use sample code from c# grammar sample as base.\r<br />\n<br />\nThis code solves my problem:<br />\n<pre><code>public static IdentifierTerminal CreateLocalIdentifier(string name)\n        {\n            var id = new IdentifierTerminal(name, IdOptions.None);\n            id.AddPrefix(&quot;!&quot;, IdOptions.IsNotKeyword);\n            id.StartCharCategories.AddRange(new[]\n            {\n                UnicodeCategory.UppercaseLetter, //Ul\n                UnicodeCategory.LowercaseLetter, //Ll\n                UnicodeCategory.TitlecaseLetter, //Lt\n                UnicodeCategory.ModifierLetter, //Lm\n                UnicodeCategory.OtherLetter, //Lo\n                UnicodeCategory.LetterNumber //Nl\n            });\n\n            id.CharCategories.AddRange(new[]\n            {\n                UnicodeCategory.DecimalDigitNumber, //Nd\n                UnicodeCategory.ConnectorPunctuation, //Pc\n                UnicodeCategory.SpacingCombiningMark, //Mc\n                UnicodeCategory.NonSpacingMark, //Mn\n                UnicodeCategory.Format //Cf\n            });\n            id.CharsToRemoveCategories.Add(UnicodeCategory.Format);\n            return id;\n        }\n\n        public static IdentifierTerminal CreateGlobalIdentifier(string name)\n        {\n            var id = new IdentifierTerminal(name, IdOptions.None);\n            id.AddPrefix(&quot;!!&quot;, IdOptions.IsNotKeyword);\n            id.StartCharCategories.AddRange(new[]\n            {\n                UnicodeCategory.UppercaseLetter, //Ul\n                UnicodeCategory.LowercaseLetter, //Ll\n                UnicodeCategory.TitlecaseLetter, //Lt\n                UnicodeCategory.ModifierLetter, //Lm\n                UnicodeCategory.OtherLetter, //Lo\n                UnicodeCategory.LetterNumber //Nl\n            });\n            id.CharCategories.AddRange(new[]\n            {\n                UnicodeCategory.DecimalDigitNumber, //Nd\n                UnicodeCategory.ConnectorPunctuation, //Pc\n                UnicodeCategory.SpacingCombiningMark, //Mc\n                UnicodeCategory.NonSpacingMark, //Mn\n                UnicodeCategory.Format //Cf\n            });\n            id.CharsToRemoveCategories.Add(UnicodeCategory.Format);\n            return id;\n        }</code></pre>\n\n",
    "PostedDate": "2014-05-20T13:30:44.387-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1247600",
    "ThreadId": "546013",
    "Html": "As for shift-reduce error, in my case error was in MakePlusRule\r<br />\n<br />\nIt was<br />\n<pre><code>member_params.Rule = Empty|MakePlusRule(member_params, null, member_param);</code></pre>\n\nbecame<br />\n<pre><code>member_params.Rule = Empty|MakePlusRule(member_params, ToTerm(&quot;,&quot;), member_param);</code></pre>\n\nThanks again for the help.<br />\n",
    "PostedDate": "2014-05-20T13:44:52.2-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]